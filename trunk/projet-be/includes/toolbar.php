<?php
/**
 * Editing toolbar functions
 * 
 * @license    GPL 2 (http://www.gnu.org/licenses/gpl.html)
 * @author     Andreas Gohr <andi@splitbrain.org>
 */

  if(!defined('DOKU_INC')) define('DOKU_INC',realpath(dirname(__FILE__).'/../').'/');

require_once(DOKU_INC.'includes/JSON.php');


/**
 * Prepares and prints an JavaScript array with all toolbar buttons
 *
 * @todo add toolbar plugins
 * @param  string $varname Name of the JS variable to fill
 * @author Andreas Gohr <andi@splitbrain.org>
 */
function toolbar_JSdefines($varname){
    global $ID;
    global $conf;
    global $lang;    

    // build button array  
    $menu = array(
       array(
            'type'   => 'format',
            'title'  => 'Gras',
            'icon'   => 'bold.png',
            'key'    => 'b',
            'open'   => '**',
            'close'  => '**',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Italique',
            'icon'   => 'italic.png',
            'key'    => 'i',
            'open'   => '//',
            'close'  => '//',
            ),
       array(
            'type'   => 'format',
            'title'  => 'SoulignÃ©',
            'icon'   => 'underline.png',
            'key'    => 'u',
            'open'   => '__',
            'close'  => '__',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Code',
            'icon'   => 'mono.png',
            'key'    => 'c',
            'open'   => "''",
            'close'  => "''",
            ),
       array(
            'type'   => 'format',
            'title'  => 'Texte barrÃ©',
            'icon'   => 'strike.png',
            'key'    => 'd',
            'open'  => '<del>',
            'close'   => '</del>',
            ),
       array(
            'type'   => 'format',
            'title'  => 'En-tÃªte 1',
            'icon'   => 'h1.png',
            'key'    => '1',
            'open'   => '====== ',
            'close'  => ' ======\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'En-tÃªte 2',
            'icon'   => 'h2.png',
            'key'    => '2',
            'open'   => '===== ',
            'close'  => ' =====\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'En-tÃªte 3',
            'icon'   => 'h3.png',
            'key'    => '3',
            'open'   => '==== ',
            'close'  => ' ====\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'En-tÃªte 4',
            'icon'   => 'h4.png',
            'key'    => '4',
            'open'   => '=== ',
            'close'  => ' ===\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'En-tÃªte 5',
            'icon'   => 'h5.png',
            'key'    => '5',
            'open'   => '== ',
            'close'  => ' ==\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Lien interne',
            'icon'   => 'link.png',
            'key'    => 'l',
            'open'   => '[[',
            'close'  => ']]',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Lien externe',
            'icon'   => 'linkextern.png',
            'open'   => '[[',
            'close'  => ']]',
            'sample' => 'http://example.com|Lien externe',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Liste numÃ©rotÃ©e',
            'icon'   => 'ol.png',
            'open'   => '  - ',
            'close'  => '\n',
            ),
       array(
            'type'   => 'format',
            'title'  => 'Liste libre',
            'icon'   => 'ul.png',
            'open'   => '  * ',
            'close'  => '\n',
            ),
       array(
            'type'   => 'insert',
            'title'  => 'Ligne horizontale',
            'icon'   => 'hr.png',
            'insert' => '----\n',
            ),
      array(
            'type'   => 'picker',
            'title'  => 'InsÃ©rer des characteres spÃ©ciaux',
            'icon'   => 'chars.png',
            'list'   => explode(' ','Ã€ Ã  Ã? Ã¡ Ã‚ Ã¢ Ãƒ Ã£ Ã„ Ã¤ Ç? ÇŽ Ä‚ Äƒ Ã… Ã¥ Ä€ Ä? Ä„ Ä… Ã† Ã¦ Ä† Ä‡ Ã‡ Ã§ ÄŒ Ä? Äˆ Ä‰ ÄŠ Ä‹ Ã? Ä‘ Ã° ÄŽ Ä? Ãˆ Ã¨ Ã‰ Ã© ÃŠ Ãª Ã‹ Ã« Äš Ä› Ä’ Ä“ Ä– Ä— Ä˜ Ä™ Ä¢ Ä£ Äœ Ä? Äž ÄŸ Ä  Ä¡ Ä¤ Ä¥ ÃŒ Ã¬ Ã? Ã­ ÃŽ Ã® Ã? Ã¯ Ç? Ç? Äª Ä« Ä° Ä± Ä® Ä¯ Ä´ Äµ Ä¶ Ä· Ä¹ Äº Ä» Ä¼ Ä½ Ä¾ Å? Å‚ Ä¿ Å€ Åƒ Å„ Ã‘ Ã± Å… Å† Å‡ Åˆ Ã’ Ã² Ã“ Ã³ Ã” Ã´ Ã• Ãµ Ã– Ã¶ Ç‘ Ç’ ÅŒ Å? Å? Å‘ Ã˜ Ã¸ Å” Å• Å– Å— Å˜ Å™ Åš Å› Åž ÅŸ Å  Å¡ Åœ Å? Å¢ Å£ Å¤ Å¥ Ã™ Ã¹ Ãš Ãº Ã› Ã» Ãœ Ã¼ Ç“ Ç” Å¬ Å­ Åª Å« Å® Å¯ Ç– Ç˜ Çš Çœ Å² Å³ Å° Å± Å´ Åµ Ã? Ã½ Å¸ Ã¿ Å¶ Å· Å¹ Åº Å½ Å¾ Å» Å¼ Ãž Ã¾ ÃŸ Ä¦ Ä§ Â¿ Â¡ Â¢ Â£ Â¤ Â¥ â‚¬ Â¦ Â§ Âª Â¬ Â¯ Â° Â± Ã· â€° Â¼ Â½ Â¾ Â¹ Â² Â³ Âµ Â¶ â€  â€¡ Â· â€¢ Âº âˆ€ âˆ‚ âˆƒ Æ? É™ âˆ… âˆ‡ âˆˆ âˆ‰ âˆ‹ âˆ? âˆ‘ â€¾ âˆ’ âˆ— âˆš âˆ? âˆž âˆ  âˆ§ âˆ¨ âˆ© âˆª âˆ« âˆ´ âˆ¼ â‰… â‰ˆ â‰  â‰¡ â‰¤ â‰¥ âŠ‚ âŠƒ âŠ„ âŠ† âŠ‡ âŠ• âŠ— âŠ¥ â‹… â—Š â„˜ â„‘ â„œ â„µ â™  â™£ â™¥ â™¦ Î± Î² Î“ Î³ Î” Î´ Îµ Î¶ Î· Î˜ Î¸ Î¹ Îº Î› Î» Î¼ Îž Î¾ Î  Ï€ Ï? Î£ Ïƒ Î¤ Ï„ Ï… Î¦ Ï† Ï‡ Î¨ Ïˆ Î© Ï‰'),
           ),

       array(
            'type'   => 'picker',
            'title'  => 'InsÃ©rer un module dynamique',
            'icon'   => 'chars.png',
            'list'   => explode(';','{{isi>ue?ID_DIPLOME}};{{isi>ens?ID_MODULE}};{{isi>uenav?ID_MODULE}};{{isi>actu}};{{isi>apog?ID_MODULE}}'),
            ),
      /*array(
            'type'   => 'signature',
            'title'  => $lang['qb_sig'],
            'icon'   => 'sig.png',
            'key'    => 'y',
           ),*/
    );
    
    // use JSON to build the JavaScript array
    $json = new JSON();
    print "var $varname = ".$json->encode($menu).";\n";
}

/**
 * prepares the signature string as configured in the config
 *
 * @author Andreas Gohr <andi@splitbrain.org>
 */
function toolbar_signature(){
  global $conf;

  $sig = $conf['signature'];
  $sig = strftime($sig);
  $sig = str_replace('@USER@',$_SERVER['REMOTE_USER'],$sig);
  $sig = str_replace('@NAME@',$_SESSION[$conf[title]]['auth']['info']['name'],$sig);
  $sig = str_replace('@MAIL@',$_SESSION[$conf[title]]['auth']['info']['mail'],$sig);
  $sig = str_replace('@DATE@',date($conf['dformat']),$sig);
  $sig = str_replace('\\\\n','\\n',addslashes($sig));
  return $sig;
}

//Setup VIM: ex: et ts=4 enc=utf-8 :
